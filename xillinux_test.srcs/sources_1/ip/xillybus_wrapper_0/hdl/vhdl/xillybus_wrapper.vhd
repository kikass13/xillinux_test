-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity xillybus_wrapper is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    in_r_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    in_r_empty_n : IN STD_LOGIC;
    in_r_read : OUT STD_LOGIC;
    out_r_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_r_full_n : IN STD_LOGIC;
    out_r_write : OUT STD_LOGIC );
end;


architecture behav of xillybus_wrapper is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "xillybus_wrapper,hls_ip_2018_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.665000,HLS_SYN_LAT=25,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=22,HLS_SYN_FF=1674,HLS_SYN_LUT=2924,HLS_VERSION=2018_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (17 downto 0) := "000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (17 downto 0) := "000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (17 downto 0) := "000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (17 downto 0) := "000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (17 downto 0) := "000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (17 downto 0) := "000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (17 downto 0) := "000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (17 downto 0) := "000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (17 downto 0) := "000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (17 downto 0) := "001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (17 downto 0) := "010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (17 downto 0) := "100000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_7E : STD_LOGIC_VECTOR (7 downto 0) := "01111110";
    constant ap_const_lv8_C2 : STD_LOGIC_VECTOR (7 downto 0) := "11000010";
    constant ap_const_lv8_3F : STD_LOGIC_VECTOR (7 downto 0) := "00111111";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_63 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_4C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001100";
    constant ap_const_lv32_4D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001101";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv58_0 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv8_83 : STD_LOGIC_VECTOR (7 downto 0) := "10000011";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv29_1FFFFFFF : STD_LOGIC_VECTOR (28 downto 0) := "11111111111111111111111111111";
    constant ap_const_lv23_7FFFFF : STD_LOGIC_VECTOR (22 downto 0) := "11111111111111111111111";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ref_4oPi_table_100_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ref_4oPi_table_100_V_ce0 : STD_LOGIC;
    signal ref_4oPi_table_100_V_q0 : STD_LOGIC_VECTOR (99 downto 0);
    signal second_order_float_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal second_order_float_2_ce0 : STD_LOGIC;
    signal second_order_float_2_q0 : STD_LOGIC_VECTOR (29 downto 0);
    signal second_order_float_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal second_order_float_3_ce0 : STD_LOGIC;
    signal second_order_float_3_q0 : STD_LOGIC_VECTOR (22 downto 0);
    signal second_order_float_s_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal second_order_float_s_ce0 : STD_LOGIC;
    signal second_order_float_s_q0 : STD_LOGIC_VECTOR (14 downto 0);
    signal in_r_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal out_r_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal x1_reg_949 : STD_LOGIC_VECTOR (31 downto 0);
    signal results_sign_V_1_reg_954 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2 : BOOLEAN;
    signal loc_V_reg_960 : STD_LOGIC_VECTOR (7 downto 0);
    signal loc_V_1_fu_258_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal loc_V_1_reg_969 : STD_LOGIC_VECTOR (22 downto 0);
    signal closepath_fu_268_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal closepath_reg_975 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_7_fu_301_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_7_reg_986 : STD_LOGIC_VECTOR (3 downto 0);
    signal Med_V_reg_991 : STD_LOGIC_VECTOR (79 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal tmp_12_i_fu_344_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_i_reg_1006 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_5_reg_1012 : STD_LOGIC_VECTOR (57 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal tmp_12_i_i_reg_1018 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Val2_s_fu_369_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Val2_s_reg_1023 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal p_Val2_7_fu_384_p3 : STD_LOGIC_VECTOR (57 downto 0);
    signal p_Val2_7_reg_1029 : STD_LOGIC_VECTOR (57 downto 0);
    signal Mx_zeros_V_fu_435_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal Mx_zeros_V_reg_1034 : STD_LOGIC_VECTOR (4 downto 0);
    signal Mx_V_reg_1040 : STD_LOGIC_VECTOR (28 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal Ex_V_fu_472_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal Ex_V_reg_1047 : STD_LOGIC_VECTOR (7 downto 0);
    signal isNeg_fu_482_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal isNeg_reg_1052 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_assign_fu_496_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_reg_1057 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_11_i_fu_504_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_i_reg_1063 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_i_fu_509_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_i_reg_1069 : STD_LOGIC_VECTOR (0 downto 0);
    signal cos_basis_fu_545_p10 : STD_LOGIC_VECTOR (0 downto 0);
    signal cos_basis_reg_1076 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal p_Val2_12_fu_576_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_Val2_12_reg_1083 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_i1_i_reg_1088 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_23_i_i_reg_1108 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal p_Val2_15_reg_1113 : STD_LOGIC_VECTOR (28 downto 0);
    signal second_order_float_6_reg_1118 : STD_LOGIC_VECTOR (22 downto 0);
    signal second_order_float_8_reg_1123 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_28_i_i_reg_1128 : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal tmp_30_i_i_reg_1133 : STD_LOGIC_VECTOR (13 downto 0);
    signal Mx_V_read_assign_fu_670_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal Mx_V_read_assign_reg_1138 : STD_LOGIC_VECTOR (28 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal r_V_fu_691_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal r_V_reg_1143 : STD_LOGIC_VECTOR (29 downto 0);
    signal result_V_reg_1148 : STD_LOGIC_VECTOR (28 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal r_V_1_fu_730_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_1_reg_1153 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_cond_i_fu_852_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_reg_1158 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal grp_scaled_fixed2ieee_fu_234_ap_idle : STD_LOGIC;
    signal grp_scaled_fixed2ieee_fu_234_ap_ready : STD_LOGIC;
    signal grp_scaled_fixed2ieee_fu_234_ap_done : STD_LOGIC;
    signal p_Result_i_fu_866_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_i_reg_1163 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_3_fu_897_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_3_reg_1168 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_4_fu_913_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal ret_V_4_reg_1173 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_scaled_fixed2ieee_fu_234_ap_start : STD_LOGIC;
    signal grp_scaled_fixed2ieee_fu_234_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_scaled_fixed2ieee_fu_234_ap_start_reg : STD_LOGIC := '0';
    signal tmp_7_i_i_i_fu_296_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_25_i_i_fu_604_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal y1_fu_262_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_28_fu_926_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal expv_op_i_fu_273_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal addr_V_fu_278_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_4_fu_286_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_9_i_i_i_fu_305_p1 : STD_LOGIC_VECTOR (99 downto 0);
    signal r_V_4_fu_308_p2 : STD_LOGIC_VECTOR (99 downto 0);
    signal p_Result_21_fu_324_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_338_p0 : STD_LOGIC_VECTOR (79 downto 0);
    signal grp_fu_338_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_338_p2 : STD_LOGIC_VECTOR (103 downto 0);
    signal tmp_8_fu_375_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_i_i_fu_379_p2 : STD_LOGIC_VECTOR (57 downto 0);
    signal p_Result_i2_i_i_fu_391_p4 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_Result_22_fu_401_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal p_Result_23_fu_409_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal p_Result_24_fu_419_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal val_assign_fu_427_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_i_i_fu_439_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_i_i_fu_451_p1 : STD_LOGIC_VECTOR (57 downto 0);
    signal p_Val2_9_fu_454_p2 : STD_LOGIC_VECTOR (57 downto 0);
    signal storemerge_i_i_fu_444_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_16_i_i_fu_469_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sh_i_cast_fu_478_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_18_i_i_fu_490_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_2_i_cast_fu_517_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_20_i_i_fu_523_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_19_i_i_fu_520_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sh_assign_2_i_cast1_fu_514_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_20_i_i_cast_fu_528_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_21_i_i_fu_532_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ssdm_int_V_write_ass_fu_538_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sin_basis_fu_590_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_i_i_fu_566_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Result_25_fu_596_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_13_fu_935_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal p_Val2_1_fu_639_p0 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Val2_1_fu_639_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_Val2_1_fu_639_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal p_Val2_6_fu_942_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_31_i_i_fu_676_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_32_i_i_fu_679_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal p_Val2_16_fu_682_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_34_i_i_cast_fu_688_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal p_Val2_17_fu_709_p0 : STD_LOGIC_VECTOR (29 downto 0);
    signal p_Val2_17_fu_709_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_Val2_17_fu_709_p2 : STD_LOGIC_VECTOR (57 downto 0);
    signal p_Ex_V_ret_i_fu_697_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal rhs_V_1_fu_726_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_18_fu_737_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_27_fu_763_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_769_p18 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_807_p18 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_i_fu_845_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_i_fu_861_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_i_fu_856_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_26_fu_741_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_or_cond_i_demorg_fu_874_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_or_cond_i_fu_878_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_892_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_i_cast_fu_884_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal loc_V_2_fu_749_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_1_i_cast_fu_905_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal loc_V_3_fu_759_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Result_s_fu_921_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_13_fu_935_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal OP1_V_3_fu_611_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal p_Val2_13_fu_935_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_Val2_6_fu_942_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_338_p00 : STD_LOGIC_VECTOR (103 downto 0);
    signal grp_fu_338_p10 : STD_LOGIC_VECTOR (103 downto 0);
    signal p_Val2_17_fu_709_p10 : STD_LOGIC_VECTOR (57 downto 0);
    signal p_Val2_1_fu_639_p10 : STD_LOGIC_VECTOR (44 downto 0);
    signal p_Val2_6_fu_942_p00 : STD_LOGIC_VECTOR (29 downto 0);

    component scaled_fixed2ieee IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_V : IN STD_LOGIC_VECTOR (28 downto 0);
        prescale : IN STD_LOGIC_VECTOR (8 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component xillybus_wrapper_fYi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (79 downto 0);
        din1 : IN STD_LOGIC_VECTOR (23 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (103 downto 0) );
    end component;


    component xillybus_wrapper_g8j IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (0 downto 0);
        din1 : IN STD_LOGIC_VECTOR (0 downto 0);
        din2 : IN STD_LOGIC_VECTOR (0 downto 0);
        din3 : IN STD_LOGIC_VECTOR (0 downto 0);
        din4 : IN STD_LOGIC_VECTOR (0 downto 0);
        din5 : IN STD_LOGIC_VECTOR (0 downto 0);
        din6 : IN STD_LOGIC_VECTOR (0 downto 0);
        din7 : IN STD_LOGIC_VECTOR (0 downto 0);
        din8 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component xillybus_wrapper_hbi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (0 downto 0);
        din1 : IN STD_LOGIC_VECTOR (0 downto 0);
        din2 : IN STD_LOGIC_VECTOR (0 downto 0);
        din3 : IN STD_LOGIC_VECTOR (0 downto 0);
        din4 : IN STD_LOGIC_VECTOR (0 downto 0);
        din5 : IN STD_LOGIC_VECTOR (0 downto 0);
        din6 : IN STD_LOGIC_VECTOR (0 downto 0);
        din7 : IN STD_LOGIC_VECTOR (0 downto 0);
        din8 : IN STD_LOGIC_VECTOR (0 downto 0);
        din9 : IN STD_LOGIC_VECTOR (0 downto 0);
        din10 : IN STD_LOGIC_VECTOR (0 downto 0);
        din11 : IN STD_LOGIC_VECTOR (0 downto 0);
        din12 : IN STD_LOGIC_VECTOR (0 downto 0);
        din13 : IN STD_LOGIC_VECTOR (0 downto 0);
        din14 : IN STD_LOGIC_VECTOR (0 downto 0);
        din15 : IN STD_LOGIC_VECTOR (0 downto 0);
        din16 : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component xillybus_wrapper_ibs IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (14 downto 0);
        din1 : IN STD_LOGIC_VECTOR (14 downto 0);
        dout : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;


    component xillybus_wrapper_jbC IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (14 downto 0);
        din1 : IN STD_LOGIC_VECTOR (14 downto 0);
        dout : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;


    component xillybus_wrapper_bkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (99 downto 0) );
    end component;


    component xillybus_wrapper_cud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;


    component xillybus_wrapper_dEe IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (22 downto 0) );
    end component;


    component xillybus_wrapper_eOg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;



begin
    ref_4oPi_table_100_V_U : component xillybus_wrapper_bkb
    generic map (
        DataWidth => 100,
        AddressRange => 13,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ref_4oPi_table_100_V_address0,
        ce0 => ref_4oPi_table_100_V_ce0,
        q0 => ref_4oPi_table_100_V_q0);

    second_order_float_2_U : component xillybus_wrapper_cud
    generic map (
        DataWidth => 30,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => second_order_float_2_address0,
        ce0 => second_order_float_2_ce0,
        q0 => second_order_float_2_q0);

    second_order_float_3_U : component xillybus_wrapper_dEe
    generic map (
        DataWidth => 23,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => second_order_float_3_address0,
        ce0 => second_order_float_3_ce0,
        q0 => second_order_float_3_q0);

    second_order_float_s_U : component xillybus_wrapper_eOg
    generic map (
        DataWidth => 15,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => second_order_float_s_address0,
        ce0 => second_order_float_s_ce0,
        q0 => second_order_float_s_q0);

    grp_scaled_fixed2ieee_fu_234 : component scaled_fixed2ieee
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_scaled_fixed2ieee_fu_234_ap_start,
        ap_done => grp_scaled_fixed2ieee_fu_234_ap_done,
        ap_idle => grp_scaled_fixed2ieee_fu_234_ap_idle,
        ap_ready => grp_scaled_fixed2ieee_fu_234_ap_ready,
        in_V => result_V_reg_1148,
        prescale => r_V_1_reg_1153,
        ap_return => grp_scaled_fixed2ieee_fu_234_ap_return);

    xillybus_wrapper_fYi_U3 : component xillybus_wrapper_fYi
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 80,
        din1_WIDTH => 24,
        dout_WIDTH => 104)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_338_p0,
        din1 => grp_fu_338_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_338_p2);

    xillybus_wrapper_g8j_U4 : component xillybus_wrapper_g8j
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 1,
        din5_WIDTH => 1,
        din6_WIDTH => 1,
        din7_WIDTH => 1,
        din8_WIDTH => 3,
        dout_WIDTH => 1)
    port map (
        din0 => ap_const_lv1_0,
        din1 => ap_const_lv1_1,
        din2 => ap_const_lv1_1,
        din3 => ap_const_lv1_0,
        din4 => ap_const_lv1_0,
        din5 => ap_const_lv1_1,
        din6 => ap_const_lv1_1,
        din7 => ap_const_lv1_0,
        din8 => p_Val2_s_reg_1023,
        dout => cos_basis_fu_545_p10);

    xillybus_wrapper_hbi_U5 : component xillybus_wrapper_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 1,
        din5_WIDTH => 1,
        din6_WIDTH => 1,
        din7_WIDTH => 1,
        din8_WIDTH => 1,
        din9_WIDTH => 1,
        din10_WIDTH => 1,
        din11_WIDTH => 1,
        din12_WIDTH => 1,
        din13_WIDTH => 1,
        din14_WIDTH => 1,
        din15_WIDTH => 1,
        din16_WIDTH => 4,
        dout_WIDTH => 1)
    port map (
        din0 => ap_const_lv1_0,
        din1 => ap_const_lv1_0,
        din2 => ap_const_lv1_0,
        din3 => ap_const_lv1_1,
        din4 => ap_const_lv1_1,
        din5 => ap_const_lv1_1,
        din6 => ap_const_lv1_1,
        din7 => ap_const_lv1_0,
        din8 => ap_const_lv1_0,
        din9 => ap_const_lv1_1,
        din10 => ap_const_lv1_1,
        din11 => ap_const_lv1_1,
        din12 => ap_const_lv1_1,
        din13 => ap_const_lv1_0,
        din14 => ap_const_lv1_0,
        din15 => ap_const_lv1_0,
        din16 => p_Result_27_fu_763_p3,
        dout => tmp_fu_769_p18);

    xillybus_wrapper_hbi_U6 : component xillybus_wrapper_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 1,
        din5_WIDTH => 1,
        din6_WIDTH => 1,
        din7_WIDTH => 1,
        din8_WIDTH => 1,
        din9_WIDTH => 1,
        din10_WIDTH => 1,
        din11_WIDTH => 1,
        din12_WIDTH => 1,
        din13_WIDTH => 1,
        din14_WIDTH => 1,
        din15_WIDTH => 1,
        din16_WIDTH => 4,
        dout_WIDTH => 1)
    port map (
        din0 => ap_const_lv1_0,
        din1 => ap_const_lv1_0,
        din2 => ap_const_lv1_1,
        din3 => ap_const_lv1_0,
        din4 => ap_const_lv1_1,
        din5 => ap_const_lv1_1,
        din6 => ap_const_lv1_0,
        din7 => ap_const_lv1_1,
        din8 => ap_const_lv1_1,
        din9 => ap_const_lv1_0,
        din10 => ap_const_lv1_1,
        din11 => ap_const_lv1_1,
        din12 => ap_const_lv1_0,
        din13 => ap_const_lv1_1,
        din14 => ap_const_lv1_0,
        din15 => ap_const_lv1_0,
        din16 => p_Result_27_fu_763_p3,
        dout => tmp_1_fu_807_p18);

    xillybus_wrapper_ibs_U7 : component xillybus_wrapper_ibs
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 15,
        dout_WIDTH => 30)
    port map (
        din0 => p_Val2_13_fu_935_p0,
        din1 => p_Val2_13_fu_935_p1,
        dout => p_Val2_13_fu_935_p2);

    xillybus_wrapper_jbC_U8 : component xillybus_wrapper_jbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 15,
        dout_WIDTH => 30)
    port map (
        din0 => p_Val2_6_fu_942_p0,
        din1 => second_order_float_8_reg_1123,
        dout => p_Val2_6_fu_942_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_scaled_fixed2ieee_fu_234_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_scaled_fixed2ieee_fu_234_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                    grp_scaled_fixed2ieee_fu_234_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_scaled_fixed2ieee_fu_234_ap_ready = ap_const_logic_1)) then 
                    grp_scaled_fixed2ieee_fu_234_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                Ex_V_reg_1047 <= Ex_V_fu_472_p2;
                Mx_V_reg_1040 <= p_Val2_9_fu_454_p2(57 downto 29);
                isNeg_reg_1052 <= Ex_V_fu_472_p2(7 downto 7);
                sh_assign_reg_1057 <= sh_assign_fu_496_p3;
                tmp_11_i_reg_1063 <= tmp_11_i_fu_504_p2;
                tmp_13_i_reg_1069 <= tmp_13_i_fu_509_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                Med_V_reg_991 <= r_V_4_fu_308_p2(99 downto 20);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                Mx_V_read_assign_reg_1138 <= Mx_V_read_assign_fu_670_p3;
                r_V_reg_1143 <= r_V_fu_691_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                Mx_zeros_V_reg_1034 <= Mx_zeros_V_fu_435_p1;
                p_Val2_7_reg_1029 <= p_Val2_7_fu_384_p3;
                p_Val2_s_reg_1023 <= p_Val2_s_fu_369_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                closepath_reg_975 <= closepath_fu_268_p2;
                tmp_7_reg_986 <= tmp_7_fu_301_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                cos_basis_reg_1076 <= cos_basis_fu_545_p10;
                p_Val2_12_reg_1083 <= p_Val2_12_fu_576_p1;
                tmp_i1_i_reg_1088 <= ssdm_int_V_write_ass_fu_538_p3(21 downto 7);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((out_r_full_n = ap_const_logic_0) or (in_r_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                loc_V_1_reg_969 <= loc_V_1_fu_258_p1;
                loc_V_reg_960 <= in_r_dout(30 downto 23);
                results_sign_V_1_reg_954 <= in_r_dout(31 downto 31);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_scaled_fixed2ieee_fu_234_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                or_cond_i_reg_1158 <= or_cond_i_fu_852_p2;
                p_Result_i_reg_1163 <= p_Result_i_fu_866_p3;
                ret_V_3_reg_1168 <= ret_V_3_fu_897_p3;
                ret_V_4_reg_1173 <= ret_V_4_fu_913_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                p_Val2_15_reg_1113 <= second_order_float_2_q0(29 downto 1);
                second_order_float_6_reg_1118 <= second_order_float_3_q0;
                second_order_float_8_reg_1123 <= second_order_float_s_q0;
                tmp_23_i_i_reg_1108 <= p_Val2_13_fu_935_p2(29 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                p_Val2_5_reg_1012 <= grp_fu_338_p2(76 downto 19);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                r_V_1_reg_1153 <= r_V_1_fu_730_p2;
                result_V_reg_1148 <= p_Val2_17_fu_709_p2(57 downto 29);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((closepath_reg_975 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                tmp_12_i_i_reg_1018 <= grp_fu_338_p2(79 downto 77);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                tmp_12_i_reg_1006 <= tmp_12_i_fu_344_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                tmp_28_i_i_reg_1128 <= p_Val2_1_fu_639_p2(44 downto 23);
                tmp_30_i_i_reg_1133 <= p_Val2_6_fu_942_p2(29 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((in_r_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                x1_reg_949 <= in_r_dout;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (in_r_empty_n, out_r_full_n, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state18, ap_CS_fsm_state17, grp_scaled_fixed2ieee_fu_234_ap_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((in_r_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((not(((out_r_full_n = ap_const_logic_0) or (in_r_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                if (((grp_scaled_fixed2ieee_fu_234_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state18 => 
                if (((out_r_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    Ex_V_fu_472_p2 <= std_logic_vector(unsigned(storemerge_i_i_fu_444_p3) - unsigned(tmp_16_i_i_fu_469_p1));
    Mx_V_read_assign_fu_670_p3 <= 
        ap_const_lv29_1FFFFFFF when (cos_basis_reg_1076(0) = '1') else 
        Mx_V_reg_1040;
    Mx_zeros_V_fu_435_p1 <= val_assign_fu_427_p3(5 - 1 downto 0);
    OP1_V_3_fu_611_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_i1_i_reg_1088),30));
    addr_V_fu_278_p3 <= 
        ap_const_lv8_3F when (closepath_fu_268_p2(0) = '1') else 
        expv_op_i_fu_273_p2;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state2_assign_proc : process(in_r_empty_n, out_r_full_n)
    begin
                ap_block_state2 <= ((out_r_full_n = ap_const_logic_0) or (in_r_empty_n = ap_const_logic_0));
    end process;

    closepath_fu_268_p2 <= "1" when (unsigned(loc_V_reg_960) < unsigned(ap_const_lv8_7E)) else "0";
    expv_op_i_fu_273_p2 <= std_logic_vector(signed(ap_const_lv8_C2) + signed(loc_V_reg_960));
    grp_fu_338_p0 <= grp_fu_338_p00(80 - 1 downto 0);
    grp_fu_338_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Med_V_reg_991),104));
    grp_fu_338_p1 <= grp_fu_338_p10(24 - 1 downto 0);
    grp_fu_338_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_21_fu_324_p3),104));
    grp_scaled_fixed2ieee_fu_234_ap_start <= grp_scaled_fixed2ieee_fu_234_ap_start_reg;

    in_r_blk_n_assign_proc : process(in_r_empty_n, ap_CS_fsm_state1, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            in_r_blk_n <= in_r_empty_n;
        else 
            in_r_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_r_read_assign_proc : process(in_r_empty_n, out_r_full_n, ap_CS_fsm_state1, ap_CS_fsm_state2)
    begin
        if (((not(((out_r_full_n = ap_const_logic_0) or (in_r_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((in_r_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            in_r_read <= ap_const_logic_1;
        else 
            in_r_read <= ap_const_logic_0;
        end if; 
    end process;

    isNeg_fu_482_p3 <= Ex_V_fu_472_p2(7 downto 7);
    loc_V_1_fu_258_p1 <= in_r_dout(23 - 1 downto 0);
    loc_V_2_fu_749_p4 <= p_Val2_18_fu_737_p1(30 downto 23);
    loc_V_3_fu_759_p1 <= p_Val2_18_fu_737_p1(23 - 1 downto 0);
    not_or_cond_i_demorg_fu_874_p2 <= (tmp_12_i_reg_1006 and tmp_11_i_reg_1063);
    not_or_cond_i_fu_878_p2 <= (not_or_cond_i_demorg_fu_874_p2 xor ap_const_lv1_1);
    not_tmp_i_fu_856_p2 <= (tmp_13_i_reg_1069 xor ap_const_lv1_1);
    or_cond_i_fu_852_p2 <= (tmp_12_i_reg_1006 and tmp_11_i_reg_1063);

    out_r_blk_n_assign_proc : process(out_r_full_n, ap_CS_fsm_state2, ap_CS_fsm_state18)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            out_r_blk_n <= out_r_full_n;
        else 
            out_r_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    out_r_din_assign_proc : process(in_r_empty_n, out_r_full_n, ap_CS_fsm_state2, ap_CS_fsm_state18, y1_fu_262_p2, p_Result_28_fu_926_p4)
    begin
        if (((out_r_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            out_r_din <= p_Result_28_fu_926_p4;
        elsif ((not(((out_r_full_n = ap_const_logic_0) or (in_r_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            out_r_din <= y1_fu_262_p2;
        else 
            out_r_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    out_r_write_assign_proc : process(in_r_empty_n, out_r_full_n, ap_CS_fsm_state2, ap_CS_fsm_state18)
    begin
        if ((((out_r_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18)) or (not(((out_r_full_n = ap_const_logic_0) or (in_r_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            out_r_write <= ap_const_logic_1;
        else 
            out_r_write <= ap_const_logic_0;
        end if; 
    end process;

    p_Ex_V_ret_i_fu_697_p3 <= 
        ap_const_lv8_0 when (cos_basis_reg_1076(0) = '1') else 
        Ex_V_reg_1047;
    p_Result_1_i_cast_fu_905_p3 <= 
        ap_const_lv23_7FFFFF when (not_or_cond_i_fu_878_p2(0) = '1') else 
        ap_const_lv23_0;
    p_Result_21_fu_324_p3 <= (ap_const_lv1_1 & loc_V_1_reg_969);
    p_Result_22_fu_401_p3 <= (p_Result_i2_i_i_fu_391_p4 & ap_const_lv1_1);
    
    p_Result_23_fu_409_p4_proc : process(p_Result_22_fu_401_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(30+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(30+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(30 - 1 downto 0);
    variable p_Result_23_fu_409_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(30 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(30 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(30 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_1D(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_0(5 - 1 downto 0);
        v0_cpy := p_Result_22_fu_401_p3;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(30-1-unsigned(ap_const_lv32_0(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(30-1-unsigned(ap_const_lv32_1D(5-1 downto 0)));
            for p_Result_23_fu_409_p4_i in 0 to 30-1 loop
                v0_cpy(p_Result_23_fu_409_p4_i) := p_Result_22_fu_401_p3(30-1-p_Result_23_fu_409_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(30-1 downto 0)))));
        res_mask := res_mask(30-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_23_fu_409_p4 <= resvalue(30-1 downto 0);
    end process;

    p_Result_24_fu_419_p3 <= (ap_const_lv2_3 & p_Result_23_fu_409_p4);
    p_Result_25_fu_596_p3 <= (sin_basis_fu_590_p2 & p_Result_i_i_fu_566_p4);
    p_Result_26_fu_741_p3 <= p_Val2_18_fu_737_p1(31 downto 31);
    p_Result_27_fu_763_p3 <= (results_sign_V_1_reg_954 & p_Val2_s_reg_1023);
    p_Result_28_fu_926_p4 <= ((p_Result_s_fu_921_p3 & ret_V_3_reg_1168) & ret_V_4_reg_1173);
    p_Result_i2_i_i_fu_391_p4 <= p_Val2_7_fu_384_p3(57 downto 29);
    p_Result_i_cast_fu_884_p3 <= 
        ap_const_lv8_FF when (not_or_cond_i_fu_878_p2(0) = '1') else 
        ap_const_lv8_0;
    p_Result_i_fu_866_p3 <= 
        not_tmp_i_fu_856_p2 when (tmp_14_i_fu_861_p2(0) = '1') else 
        p_Result_26_fu_741_p3;
    p_Result_i_i_fu_566_p4 <= ssdm_int_V_write_ass_fu_538_p3(28 downto 22);
    p_Result_s_fu_921_p3 <= 
        results_sign_V_1_reg_954 when (or_cond_i_reg_1158(0) = '1') else 
        p_Result_i_reg_1163;
    p_Val2_12_fu_576_p1 <= ssdm_int_V_write_ass_fu_538_p3(22 - 1 downto 0);
    p_Val2_13_fu_935_p0 <= OP1_V_3_fu_611_p1(15 - 1 downto 0);
    p_Val2_13_fu_935_p1 <= OP1_V_3_fu_611_p1(15 - 1 downto 0);
    p_Val2_16_fu_682_p2 <= std_logic_vector(signed(tmp_31_i_i_fu_676_p1) + signed(tmp_32_i_i_fu_679_p1));
    p_Val2_17_fu_709_p0 <= r_V_reg_1143;
    p_Val2_17_fu_709_p1 <= p_Val2_17_fu_709_p10(29 - 1 downto 0);
    p_Val2_17_fu_709_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Mx_V_read_assign_reg_1138),58));
    p_Val2_17_fu_709_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_17_fu_709_p0) * signed('0' &p_Val2_17_fu_709_p1))), 58));
    p_Val2_18_fu_737_p1 <= grp_scaled_fixed2ieee_fu_234_ap_return;
    p_Val2_1_fu_639_p0 <= second_order_float_6_reg_1118;
    p_Val2_1_fu_639_p1 <= p_Val2_1_fu_639_p10(22 - 1 downto 0);
    p_Val2_1_fu_639_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_12_reg_1083),45));
    p_Val2_1_fu_639_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_1_fu_639_p0) * signed('0' &p_Val2_1_fu_639_p1))), 45));
    p_Val2_6_fu_942_p0 <= p_Val2_6_fu_942_p00(15 - 1 downto 0);
    p_Val2_6_fu_942_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_23_i_i_reg_1108),30));
    p_Val2_7_fu_384_p3 <= 
        p_Val2_i_i_fu_379_p2 when (tmp_8_fu_375_p1(0) = '1') else 
        p_Val2_5_reg_1012;
    p_Val2_9_fu_454_p2 <= std_logic_vector(shift_left(unsigned(p_Val2_7_reg_1029),to_integer(unsigned('0' & tmp_13_i_i_fu_451_p1(31-1 downto 0)))));
    p_Val2_i_i_fu_379_p2 <= std_logic_vector(unsigned(ap_const_lv58_0) - unsigned(p_Val2_5_reg_1012));
    p_Val2_s_fu_369_p3 <= 
        ap_const_lv3_0 when (closepath_reg_975(0) = '1') else 
        tmp_12_i_i_reg_1018;
    p_i_i_fu_439_p2 <= std_logic_vector(signed(ap_const_lv8_83) + signed(loc_V_reg_960));
    r_V_1_fu_730_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(rhs_V_1_fu_726_p1));
    r_V_4_fu_308_p2 <= std_logic_vector(shift_left(unsigned(ref_4oPi_table_100_V_q0),to_integer(unsigned('0' & tmp_9_i_i_i_fu_305_p1(31-1 downto 0)))));
    r_V_fu_691_p2 <= std_logic_vector(unsigned(p_Val2_16_fu_682_p2) + unsigned(tmp_34_i_i_cast_fu_688_p1));
    ref_4oPi_table_100_V_address0 <= tmp_7_i_i_i_fu_296_p1(4 - 1 downto 0);

    ref_4oPi_table_100_V_ce0_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            ref_4oPi_table_100_V_ce0 <= ap_const_logic_1;
        else 
            ref_4oPi_table_100_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ret_V_3_fu_897_p3 <= 
        p_Result_i_cast_fu_884_p3 when (tmp_2_fu_892_p2(0) = '1') else 
        loc_V_2_fu_749_p4;
    ret_V_4_fu_913_p3 <= 
        p_Result_1_i_cast_fu_905_p3 when (tmp_2_fu_892_p2(0) = '1') else 
        loc_V_3_fu_759_p1;
        rhs_V_1_fu_726_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Ex_V_ret_i_fu_697_p3),9));

    second_order_float_2_address0 <= tmp_25_i_i_fu_604_p1(8 - 1 downto 0);

    second_order_float_2_ce0_assign_proc : process(ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            second_order_float_2_ce0 <= ap_const_logic_1;
        else 
            second_order_float_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    second_order_float_3_address0 <= tmp_25_i_i_fu_604_p1(8 - 1 downto 0);

    second_order_float_3_ce0_assign_proc : process(ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            second_order_float_3_ce0 <= ap_const_logic_1;
        else 
            second_order_float_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    second_order_float_s_address0 <= tmp_25_i_i_fu_604_p1(8 - 1 downto 0);

    second_order_float_s_ce0_assign_proc : process(ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            second_order_float_s_ce0 <= ap_const_logic_1;
        else 
            second_order_float_s_ce0 <= ap_const_logic_0;
        end if; 
    end process;

        sh_assign_2_i_cast1_fu_514_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_assign_reg_1057),32));

        sh_assign_2_i_cast_fu_517_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_assign_reg_1057),29));

    sh_assign_fu_496_p3 <= 
        tmp_18_i_i_fu_490_p2 when (isNeg_fu_482_p3(0) = '1') else 
        sh_i_cast_fu_478_p1;
        sh_i_cast_fu_478_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(Ex_V_fu_472_p2),9));

    sin_basis_fu_590_p2 <= (cos_basis_fu_545_p10 xor ap_const_lv1_1);
    ssdm_int_V_write_ass_fu_538_p3 <= 
        tmp_20_i_i_cast_fu_528_p1 when (isNeg_reg_1052(0) = '1') else 
        tmp_21_i_i_fu_532_p2;
    storemerge_i_i_fu_444_p3 <= 
        p_i_i_fu_439_p2 when (closepath_reg_975(0) = '1') else 
        ap_const_lv8_0;
    tmp_10_i_fu_845_p3 <= 
        tmp_fu_769_p18 when (cos_basis_reg_1076(0) = '1') else 
        tmp_1_fu_807_p18;
    tmp_11_i_fu_504_p2 <= "1" when (loc_V_reg_960 = ap_const_lv8_0) else "0";
    tmp_12_i_fu_344_p2 <= "1" when (loc_V_1_reg_969 = ap_const_lv23_0) else "0";
    tmp_13_i_fu_509_p2 <= "1" when (loc_V_reg_960 = ap_const_lv8_FF) else "0";
    tmp_13_i_i_fu_451_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Mx_zeros_V_reg_1034),58));
    tmp_14_i_fu_861_p2 <= (tmp_13_i_reg_1069 or tmp_10_i_fu_845_p3);
    tmp_16_i_i_fu_469_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Mx_zeros_V_reg_1034),8));
    tmp_18_i_i_fu_490_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(sh_i_cast_fu_478_p1));
    tmp_19_i_i_fu_520_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Mx_V_reg_1040),32));
    tmp_20_i_i_cast_fu_528_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_20_i_i_fu_523_p2),32));
    tmp_20_i_i_fu_523_p2 <= std_logic_vector(shift_right(unsigned(Mx_V_reg_1040),to_integer(unsigned('0' & sh_assign_2_i_cast_fu_517_p1(29-1 downto 0)))));
    tmp_21_i_i_fu_532_p2 <= std_logic_vector(shift_left(unsigned(tmp_19_i_i_fu_520_p1),to_integer(unsigned('0' & sh_assign_2_i_cast1_fu_514_p1(31-1 downto 0)))));
    tmp_25_i_i_fu_604_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_25_fu_596_p3),64));
    tmp_2_fu_892_p2 <= (tmp_13_i_reg_1069 or or_cond_i_fu_852_p2);
        tmp_31_i_i_fu_676_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_15_reg_1113),30));

        tmp_32_i_i_fu_679_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_28_i_i_reg_1128),30));

        tmp_34_i_i_cast_fu_688_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_30_i_i_reg_1133),30));

    tmp_4_fu_286_p4 <= addr_V_fu_278_p3(7 downto 4);
    tmp_7_fu_301_p1 <= addr_V_fu_278_p3(4 - 1 downto 0);
    tmp_7_i_i_i_fu_296_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_286_p4),64));
    tmp_8_fu_375_p1 <= p_Val2_s_fu_369_p3(1 - 1 downto 0);
    tmp_9_i_i_i_fu_305_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_7_reg_986),100));
    
    val_assign_fu_427_p3_proc : process(p_Result_24_fu_419_p3)
    begin
        val_assign_fu_427_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if p_Result_24_fu_419_p3(i) = '1' then
                val_assign_fu_427_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

    y1_fu_262_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(x1_reg_949));
end behav;
